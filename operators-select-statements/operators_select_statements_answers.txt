Exercises

1. Write out a generic SELECT statement.

  SELECT column
  FROM table
  WHERE condition

2. Create a fun way to remember the order of operations in a SELECT statement, such as a mnemonic.

  Slim Conway Farted Through a Wormhole Crevice 

3. Given this dogs table, write queries to select the following pieces of data:

Intake teams typically guess the breed of shelter dogs, so the
breed column may have multiple words (for example, "Labrador Collie mix").

  Display the name, gender, and age of all dogs that are part Labrador.

    SELECT name, gender, age
    FROM dogs
    WHERE breed LIKE '%labrador%';

  Display the ids of all dogs that are under 1 year old.

    SELECT id
    FROM dogs
    WHERE age<1;

  Display the name and age of all dogs that are female and over 35lbs.

    SELECT name, age
    FROM dogs
    WHERE gender = 'F'
    AND weight > 351;

  Display all of the information about all dogs that are not Shepherd mixes.

    SELECT *
    FROM dogs
    WHERE breed NOT LIKE '%shepherd%';

  Display the id, age, weight, and breed of all dogs that are either over 60lbs or Great Danes.

    SELECT id, age, weight, breed
    FROM dogs
    WHERE breed = 'great dane'
    OR weight > 60;

4. Given this cats table, what records are returned from these queries?

  SELECT name, adoption_date FROM cats;

    NAME          ADOPTION_DATE
    'Mushi'       '2016-03-22'
    'Seashell'    NULL
    'Azul'        '2016-04-17'
    'Victoire'    '2016-09-01'
    'Nala'        NULL

  SELECT name, age FROM cats;

    NAME          age
    'Mushi'       1
    'Seashell'    7
    'Azul'        3
    'Victoire'    7
    'Nala'        1


5. From the cats table, write queries to select the following pieces of data.

  Display all the information about all of the available cats.

    SELECT *
    FROM cats;

  Choose one cat of each age to show to potential adopters.

    SELECT DISTINCT name, age
    FROM cats

  Find all of the names of the cats, so you don’t choose duplicate names for new cats.

    SELECT name
    FROM cats;

6. List each comparison operator and explain when you would use it. Include a real world example for each.

  '<' is less than, and is used to find values less than a given value.
  For example, return all the plane tickets less than 200 dollars.

  '>' is greater than, and is used to find values greater than a given value.
  For example, returns all the hotest days in the year

  '<=' is less than or equal to a given value.
  For example, returns all the available times less than or equal to 2:00pm

  '>=' is greater than or equal to a given value.
  For example, returns all the store items greater than or equal to $20

  '!=' is not equal to a given value.
  For example, returns all the countries not equal to "North Korea"

  '=' is equal to a given value.
  For example, return all the vacation locations that are in the "United States"

  '<>' greater than or less than, used to co,pare if given value is greater or less than another value. Similar to '!='.
  For example, is the price of this item greater or less than the price of that item.

  LIKE is used to look for comparisons within strings and can be used to look for a specific word or phrase.
  For example, it could find all the items in a store that contain the string "usb".

  BETWEEN is used to tell if one value is between or equal to two other values.
  FOR example, is 20 BETWEEN 10 AND 34, would return the value 20.

  IS DISTINCT FROM is similar to '<>' but should be used instead if one of the inputs could possibly be null.
  For example, if both values were null it would return false, if only one was null, it would return true.

  IS TRUE/IS FALSE is used to determine if an expression is true or false.
  For example, 20 < 30 IS TRUE, would return true.

  IS NULL returns true if contents of cell are null.
  For example, NULL IS NULL would return true, but false otherwise.

  AND requires both condtitions to be true for value to be returned.
  For example, 20 < 30 AND 55 > 2.

  OR  requires only one condition to be true for value to be returned.
  For example, 20 < 30 OR 55 < 2.

  NOT Requires condition to be false to be returned.
  For example, NOT 55 < 2.

7. From the cats table, what data is returned from these queries?

  SELECT name FROM cats WHERE gender = ‘F’;

    NAME        
    'Seashell'    
    'Nala'            

  SELECT name FROM cats WHERE age <> 3;

    NAME    
    'Mushi'       
    'Seashell'    
    'Victoire'    
    'Nala'       

  SELECT ID FROM cats WHERE name != ‘Mushi’ AND gender = ‘M’;

    NAME         
    'Azul'        
    'Victoire'    